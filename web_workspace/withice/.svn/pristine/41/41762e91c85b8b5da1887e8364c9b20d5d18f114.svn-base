package com.withice.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.withice.util.ConnectionUtil;
import com.withice.util.QueryUtil;
import com.withice.vo.Order;
import com.withice.vo.OrderAddress;
import com.withice.vo.OrderDetail;

public class OrderDao {

	public void insertOrder(Order order) throws SQLException {
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("order.insertOrder"));
		pstmt.setInt(1, order.getPrice());
		pstmt.setString(2, order.getUserId());
		pstmt.executeUpdate();
		
		connection.close();
		pstmt.close();
	}
	
	public void insertOrderDetail(OrderDetail orderDetail) throws SQLException {
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("order.insertOrderDetail"));
		pstmt.setInt(1, orderDetail.getPrice());
		pstmt.setInt(2, orderDetail.getAmount());
		pstmt.setInt(3, orderDetail.getProductNo());
		pstmt.setInt(4, orderDetail.getOrderNo());
		pstmt.executeUpdate();
		
		connection.close();
		pstmt.close();
	}
	
	public void insertOrderAddress(OrderAddress orderAddress) throws SQLException {
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("order.insertOrderAddress"));
		pstmt.setInt(1, orderAddress.getPostalCode());
		pstmt.setString(2, orderAddress.getMainAddress());
		pstmt.setString(3, orderAddress.getSubAddress());
		pstmt.setString(4, orderAddress.getPhone());
		pstmt.setString(5, orderAddress.getReceiver());
		pstmt.setString(6, orderAddress.getContent());
		pstmt.setInt(7, orderAddress.getOrderNo());
		pstmt.executeUpdate();
		
		connection.close();
		pstmt.close();
	}
	
	public Order getOrderNoByUserIdRownum (String userId) throws SQLException {
		Order order = null;
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("order.getOrderNoByUserIdRownum"));
		pstmt.setString(1, userId);
		ResultSet rs = pstmt.executeQuery();
		if(rs.next()) {
			order = new Order();
			order.setNo(rs.getInt("order_no"));
			order.setPrice(rs.getInt("order_price"));
			order.setRegisteredDate(rs.getDate("order_registered_date"));
			order.setStatus(rs.getString("order_status"));
			order.setUserId(rs.getString("user_id"));
		}
		connection.close();
		pstmt.close();
		rs.close();
		
		return order;
	}
}
