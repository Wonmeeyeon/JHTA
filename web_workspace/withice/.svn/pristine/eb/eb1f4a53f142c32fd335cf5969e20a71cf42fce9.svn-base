package com.withice.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.withice.util.ConnectionUtil;
import com.withice.util.JdbcHelper;
import com.withice.util.JdbcHelper.RowMapper;
import com.withice.util.QueryUtil;
import com.withice.vo.Product;
import com.withice.vo.ProductTag;

public class ProductDao {

	public List<Product> getNewProductByDate() throws SQLException {
		List<Product> products = new ArrayList<Product>();
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("product.getNewProductByDate"));
		ResultSet rs = pstmt.executeQuery();
		
		while (rs.next()) {
			Product product = new Product();
			product.setNo(rs.getInt("product_no"));
			product.setName(rs.getString("product_name"));
			product.setPrice(rs.getInt("product_price"));
			product.setStock(rs.getInt("product_stock"));
			product.setComment(rs.getString("product_comment"));
			product.setThumbnail(rs.getString("product_thumbnail"));
			product.setDate(rs.getDate("product_registered_date"));
			product.setCateNo(rs.getInt("cate_no"));
			
			products.add(product);
		}
		rs.close();
		pstmt.close();
		connection.close();
		
		return products;
	}
	
	public Product getProductByNo(int productNo) throws SQLException {
		Product product = null;
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("product.getProductByNo"));
		pstmt.setInt(1, productNo);
		ResultSet rs = pstmt.executeQuery();

		if(rs.next()) {
			product = new Product();
			product.setNo(rs.getInt("product_no"));
			product.setName(rs.getString("product_name"));
			product.setPrice(rs.getInt("product_price"));
			product.setStock(rs.getInt("product_stock"));
			product.setComment(rs.getString("product_comment"));
			product.setThumbnail(rs.getString("product_thumbnail"));
			product.setDate(rs.getDate("product_registered_date"));
			product.setCateNo(rs.getInt("cate_no"));
		}
		rs.close();
		pstmt.close();
		connection.close();
		return product;
	}
	
	public List<Product> getBestProduct() throws SQLException {
		List<Product> products = new ArrayList<Product>();
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("product.getBestProduct"));
		ResultSet rs = pstmt.executeQuery();
		
		while (rs.next()) {
			Product product = new Product();
			product.setNo(rs.getInt("product_no"));
			product.setName(rs.getString("product_name"));
			product.setPrice(rs.getInt("product_price"));
			product.setStock(rs.getInt("product_stock"));
			product.setComment(rs.getString("product_comment"));
			product.setThumbnail(rs.getString("product_thumbnail"));
			product.setDate(rs.getDate("product_registered_date"));
			product.setCateNo(rs.getInt("cate_no"));
			
			products.add(product);
		}
		rs.close();
		pstmt.close();
		connection.close();
		
		return products;
	}
	
	public List<ProductTag> getProductTagsByNo(int productNo) throws SQLException {
		List<ProductTag> tags = new ArrayList<ProductTag>();
		Connection connection = ConnectionUtil.getConnection();
		PreparedStatement pstmt = connection.prepareStatement(QueryUtil.getSQL("product.getProductTagsByNo"));
		pstmt.setInt(1, productNo);
		ResultSet rs = pstmt.executeQuery();
		
		while (rs.next()) {
			ProductTag tag = new ProductTag();
			
			tag.setNo(rs.getInt("tag_no"));
			tag.setName(rs.getString("tag_name"));
			tag.setTagThumbnail(rs.getString("tag_thumnail"));
			
			tags.add(tag);
		}
		rs.close();
		pstmt.close();
		connection.close();
		
		return tags;
	}
	
	public List<Product> getProductByMainCategory(int cateNo, int beginIndex, int endIndex) throws SQLException {
		return JdbcHelper.selectList(QueryUtil.getSQL("product.getProductByMainCategory"), new RowMapper<Product>() {
			@Override
			public Product mapRow(ResultSet rs) throws SQLException {
				Product product = new Product();
				product.setNo(rs.getInt("product_no"));
				product.setName(rs.getString("product_name"));
				product.setPrice(rs.getInt("product_price"));
				product.setStock(rs.getInt("product_stock"));
				product.setComment(rs.getString("product_comment"));
				product.setThumbnail(rs.getString("product_thumbnail"));
				product.setDate(rs.getDate("product_registered_date"));
				product.setCateNo(rs.getInt("cate_no"));
				
				return product;
			}
		}, cateNo, beginIndex, endIndex);
	}
	
	public List<Product> getProductByCategory(int cateNo, int beginIndex, int endIndex) throws SQLException {
		return JdbcHelper.selectList(QueryUtil.getSQL("product.getProductByCategory"), new RowMapper<Product>() {
			@Override
			public Product mapRow(ResultSet rs) throws SQLException {
				Product product = new Product();
				product.setNo(rs.getInt("product_no"));
				product.setName(rs.getString("product_name"));
				product.setPrice(rs.getInt("product_price"));
				product.setStock(rs.getInt("product_stock"));
				product.setComment(rs.getString("product_comment"));
				product.setThumbnail(rs.getString("product_thumbnail"));
				product.setDate(rs.getDate("product_registered_date"));
				product.setCateNo(rs.getInt("cate_no"));
				
				return product;
			}
		}, cateNo, beginIndex, endIndex);
	}
}
